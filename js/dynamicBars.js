// Generated by CoffeeScript 1.6.3
(function() {
  var Bar, bar;

  Bar = (function() {
    function Bar(bars) {
      var _this = this;
      this.bars = bars;
      this.w = 20;
      this.h = 80;
      this.x = d3.scale.linear().domain([0, 1]).range([0, this.w]);
      this.y = d3.scale.linear().domain([0, 100]).range([0, this.h]);
      this.target = d3.select("#bar");
      this.time = 1297110663;
      this.value = 70;
      this.data = d3.range(this.bars).map(function() {
        return _this.next();
      });
      this.bindFunctions();
    }

    Bar.prototype.bindFunctions = function() {
      var _this = this;
      this.logData();
      this.drawSvg();
      setInterval((function() {
        _this.data.shift();
        _this.data.push(_this.next());
        return _this.reDraw();
      }), 1500);
      return this.logChart();
    };

    Bar.prototype.drawSvg = function() {
      var _this = this;
      this.chart = this.target.append("svg").attr("width", this.w * (this.data.length - 1)).attr("height", this.h).attr("class", "chart");
      this.chart.selectAll("rect").data(this.data).enter().append("rect").attr("x", function(d, i) {
        return _this.x(i) - .5;
      }).attr("y", function(d) {
        return _this.h - _this.y(d.value) - .5;
      }).attr("width", this.w).attr("height", function(d) {
        return _this.y(d.value);
      }).attr("fill", "steelblue").attr("stoke", "white");
      return this.chart.append("line").attr("x1", 0).attr("x2", this.w * this.data.length).attr("y1", this.h - .4).attr("y2", this.h - .6).style("stroke", "black");
    };

    Bar.prototype.reDraw = function() {
      var _this = this;
      this.rect = this.chart.selectAll("rect").data(this.data, function(d) {
        return d.time;
      });
      this.rect.enter().insert("rect", "line").attr("x", function(d, i) {
        return _this.x(i) - .5;
      }).attr("y", function(d) {
        return _this.h - _this.y(d.value) - .5;
      }).attr("width", this.w).attr("height", function(d) {
        return _this.y(d.value);
      }).attr("fill", "steelblue").attr("stoke", "white");
      this.rect.transition().duration(1000).attr("x", function(d, i) {
        return _this.x(i) - .5;
      });
      return this.rect.exit().remove();
    };

    Bar.prototype.logChart = function() {
      var _this = this;
      return $("#logChart").click(function() {
        return console.log(_this.chart);
      });
    };

    Bar.prototype.logData = function() {
      var _this = this;
      return $("#logData").click(function() {
        return console.log(_this.data.length);
      });
    };

    Bar.prototype.next = function() {
      var value;
      return {
        time: ++this.time,
        value: value = this.value = ~~Math.max(10, Math.min(90, this.value + 10 * (Math.random() - .5)))
      };
    };

    Bar.prototype.setInterval = function() {
      return 1500;
    };

    return Bar;

  })();

  bar = new Bar(30);

}).call(this);
