// Generated by CoffeeScript 1.6.3
(function() {
  var PieChart, pie;

  PieChart = (function() {
    function PieChart(width, height, target) {
      this.width = width || "500";
      this.height = height || "500";
      this.oRadius = this.width / 2;
      this.iRadius = 50;
      this.padding = 50;
      this.target = d3.select(target);
      this.arc = d3.svg.arc().innerRadius(this.iRadius).outerRadius(this.oRadius);
      this.data = this.getData();
      this.layout = d3.layout.pie();
      this.pieChart = this.target.append("svg").attr("width", this.width).attr("height", this.height);
      this.color = d3.scale.category10().domain(d3.range(0, 10));
      this.wedges = this.pieChart.selectAll("g").data(this.layout(this.data)).enter().append("g").attr({
        "class": "wedge"
      }).attr("transform", "translate(" + this.oRadius + "," + this.oRadius + ")");
      this.bindReDraw();
    }

    PieChart.prototype.getData = function() {
      var data,
        _this = this;
      data = [];
      _(6).times(function() {
        return data.push(Math.round(Math.random() * 1000));
      });
      return data;
    };

    PieChart.prototype.draw = function() {
      var _this = this;
      console.log("DRAW", this.layout(this.data));
      this.wedges.append("path").attr('fill', function(d, i) {
        return _this.color(i);
      }).attr('d', this.arc);
      return this.createLabels();
    };

    PieChart.prototype.createLabels = function() {
      var _this = this;
      return this.labels = this.wedges.append("text").attr('transform', function(d) {
        return 'translate(' + _this.arc.centroid(d) + ')';
      }).attr('text-anchor', 'middle').text(function(d) {
        return d.value;
      });
    };

    PieChart.prototype.bindReDraw = function() {
      var _this = this;
      return $("#redraw").click(function() {
        var newData;
        newData = _this.getData();
        _this.wedges.data(_this.layout(newData)).select('path').transition().duration(1000).ease('bounce').attr('fill', function(d, i) {
          return _this.color(i);
        }).attr('d', _this.arc);
        return _this.labels.data(_this.layout(newData)).transition().duration(1000).attr('transform', function(d) {
          return 'translate(' + _this.arc.centroid(d) + ')';
        }).attr('text-anchor', 'middle').text(function(d) {
          return d.value;
        });
      });
    };

    return PieChart;

  })();

  pie = new PieChart("500", "500", "#coffeepiechart");

  pie.draw();

}).call(this);
