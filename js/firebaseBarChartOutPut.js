// Generated by CoffeeScript 1.6.3
(function() {
  var app;

  app = angular.module("firecharts", ['firebase']);

  app.controller('chartCtrl', function($scope, angularFire, angularFireCollection) {
    var fire, url;
    $scope.votes = [1, 2, 3, 4];
    url = "https://d3questions.firebaseio.com/questions/-J3nC_BtmoIAhlqP5q5I/votes/";
    fire = new Firebase(url);
    angularFire(fire, $scope, 'votes', {}).then(function() {});
    return $scope.showVotes = function() {};
  });

  app.directive('csBar', function() {
    return {
      restrict: "A",
      scope: {
        votes: "="
      },
      template: '<div id="barchart"></div>',
      link: function(scope, element, attrs) {
        var addLabels, chart, draw, height, padding, reMove, width, xScale,
          _this = this;
        element.bind("click", function() {
          return console.log("click this");
        });
        height = 400;
        width = 600;
        padding = 4;
        chart = d3.select("#barchart").append("svg").attr("width", width).attr("height", height);
        xScale = d3.scale.linear().domain([1, 10]).range([padding, width - padding]);
        draw = function(data) {
          return d3.selectAll("svg").selectAll("rect").data(_.pluck(data, "count")).enter().append("rect").attr("height", height / _.pluck(data, "count").length - padding).attr("rx", "5").attr("ry", "5").attr("width", function(datum) {
            return xScale(datum);
          }).attr("y", function(datum, index) {
            return index * (height / _.pluck(data, "count").length);
          }).attr("x", function(datum) {
            console.log("draw triggered");
            return 0;
          }).classed("rect", true);
        };
        reMove = function(data) {
          return chart.selectAll("rect").data(_.pluck(data, "count")).exit().transition().remove();
        };
        addLabels = function(data) {
          return chart.selectAll("text").data(_.pluck(data, "count")).enter().append("text").text(function(d) {
            return Math.round(d);
          }).attr("y", function(datum, index) {
            return index * (height / _.pluck(data, "count").length) + (.5 * height / _.pluck(data, "count").length - padding);
          }).attr("x", function(datum) {
            return Number(datum) + 5;
          });
        };
        return scope.$watch('votes', function(n, o) {
          if (n && _.every(_.pluck(n, "count"), _.isNumber()) === true) {
            console.log("new scope.votes", _.pluck(n, "count"));
            console.log("old scope.votes", _.pluck(o, "count"));
            draw(n);
            reMove(n);
            addLabels(n);
          }
          return true;
        });
      }
    };
  });

}).call(this);
